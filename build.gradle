plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
    id "org.sonarqube" version "4.3.0.3225"
    id 'jacoco'
}

group = 'com.t-woori'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.auth0:java-jwt:4.4.0'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'

    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    runtimeOnly 'com.mysql:mysql-connector-j'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    runtimeOnly 'com.h2database:h2'

    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    testImplementation "org.testcontainers:testcontainers:1.19.1"

}

tasks.named('test') {
    useJUnitPlatform()
}

sonar {
    properties {
        property "sonar.projectKey", "contest-server"
        property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
        property "sonar.sources", "src/main/java"
        property "sonar.tests.url", "src/test/java"
    }
}

jacoco {
    toolVersion = "0.8.10"
}

jacocoTestReport {
    reports {
        html.required = true
        csv.required = true
        xml.required = true
        xml.destination(new File("${buildDir}/reports/jacoco/test/jacocoTestReport.xml"))
    }
}

test.finalizedBy jacocoTestReport